name: Open Source Python Lib Coding Agent Deploy

on:
  push:
    branches:
      - deployment
  pull_request:
    branches:
      - deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # # Step 4: Extract all environment variables (No `run` required, these are just env settings)
      # - name: Extracting all the env variables
      #   env:
      #     ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     FAST_API_URL: ${{ secrets.FAST_API_URL }}
      #     LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
      #     LANGCHAIN_ENDPOINT: ${{ secrets.LANGCHAIN_ENDPOINT }}
      #     LANGCHAIN_PROJECT: ${{ secrets.LANGCHAIN_PROJECT }}
      #     LANGCHAIN_TRACING_V2: ${{ secrets.LANGCHAIN_TRACING_V2 }}
      #     OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      #     PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
      #     SECRET_KEY: ${{ secrets.SECRET_KEY }}
      #     SERPAPI_KEY: ${{ secrets.SERPAPI_KEY }}
      #     SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      #     SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      #     SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      #     SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      #     SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
      #     SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      #     SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build Docker image
      - name: Build the Docker image
        run: |
          docker build -t login-app . || (echo "Docker build failed!" && exit 1)

      # Step 6: Tag Docker image with timestamp
      - name: Tag the Docker image with timestamp
        run: |
          TIMESTAMP=$(date +%Y%m%d%H)  # Remove seconds to avoid mismatch
          echo "Generated timestamp: $TIMESTAMP"
          docker tag login-app:latest "${{ secrets.DOCKER_USERNAME }}/login-app:$TIMESTAMP"
          echo "Docker image tagged as: ${{ secrets.DOCKER_USERNAME }}/login-app:$TIMESTAMP"

      # Step 7: Push Docker image to Docker Hub
      - name: Push the Docker image to Docker Hub
        run: |
          TIMESTAMP=$(date +%Y%m%d%H)  # Remove seconds to avoid mismatch
          echo "Pushing Docker image: ${{ secrets.DOCKER_USERNAME }}/login-app:$TIMESTAMP"
          docker push "${{ secrets.DOCKER_USERNAME }}/login-app:$TIMESTAMP"
