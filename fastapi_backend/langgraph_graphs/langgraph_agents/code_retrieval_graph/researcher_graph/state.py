"""State management for the researcher graph.

This module defines the state structures used in the researcher graph.
"""

from dataclasses import dataclass, field
from typing import Annotated

from langchain_core.documents import Document

from fastapi_backend.langgraph_graphs.langgraph_agents.utils import reduce_docs, reduce_codes

@dataclass(kw_only=True)
class QueryState:
    """Private state for the retrieve_documents node in the researcher graph."""

    query: str
    library: str

@dataclass(kw_only=True)
class SqlState:
    """Private state for the query_database node in the researcher graph."""

    class_names: list[str] = field(default_factory=list)
    """A list of class names based on the documents the retriever retrieves."""
    api_names: list[str] = field(default_factory=list)
    """A list of API names based on the documents the retriever retrieves."""

@dataclass(kw_only=True)
class ResearcherState:
    """State of the researcher graph / agent."""

    question: str
    """A step in the research plan generated by the retriever agent."""
    queries: list[str] = field(default_factory=list)
    """A list of search queries based on the question that the researcher generates."""
    documents: Annotated[list[Document], reduce_docs] = field(default_factory=list)
    """Populated by the retriever. This is a list of documents that the agent can reference."""
    library_code: Annotated[list[tuple[str, ...]], reduce_codes] = field(default_factory=list)
    """A list of code blocks for various classes and APIs retrieved from the Snowflake DB."""
    library: str = field(default="")